#!/bin/sh

FOUND=0
FOUND2=0
REPOS=""
DB_EXT=""
OLDFILES=""
NEWFILES=""

if test "$UID" -ne "0"; then
	echo "You must be root to do this."
	exit 1
fi

for i in "$@"; do
	if test "$FOUND" -eq "1"; then
		REPOS="${i//,/ }"
		break
	fi
	if echo $i | egrep -q -- "^--"; then
		continue
	fi
	if echo $i | egrep -q -- "^-"; then
		if echo $i | egrep -q -- "t"; then
			FOUND=1
		fi
	fi
done

if test -z "$REPOS"; then
	REPOS="$(sh -c "source /etc/repoman.conf;echo \${repos[@]}")"
fi

if test -z "$REPOS"; then
	echo "Unable to determine a repos list."
	exit 1
fi

DB_EXT="$(sh -c "source /etc/makepkg.conf;echo \$DB_EXT")"

for i in $REPOS; do
	export j="${i}_${DB_EXT}"
	k="$(sh -c "source /etc/repoman.conf;eval \"echo \${${j}/.$DB_EXT}\"")"
	if test -z "$k"; then
		k="$i"
	fi
	if test -z "$OLDFILES"; then
		OLDFILES="$k"
	else
		OLDFILES="$OLDFILES $k"
	fi
	unset j
done

for i in $OLDFILES; do
	j="${i//-/_}_i686"
	if test -z "$NEWFILES"; then
		NEWFILES="$j"
	else
		NEWFILES="$NEWFILES $j"
	fi
	cp -af /etc/pacman-g2/repos/{$i,$j}
	sed -i 's|/frugalware-x86_64|/frugalware-i686|' /etc/pacman-g2/repos/$j
	unset j
done

if test "$FOUND" -eq "1"; then
	for i in `seq 1 $#`; do
		j="$(eval echo \${${i}})"
		if test "$FOUND2" -eq "1"; then
			k=("$@")
			k[(($i-1))]="${NEWFILES// /,}"
			set -- "${k[@]}"
			break
		fi
		if echo $j | egrep -q -- "^--"; then
			continue
		fi
		if echo $j | egrep -q -- "^-"; then
			if echo $j | egrep -q -- "t"; then
				FOUND2=1
			fi
		fi
		unset j
	done
else
	k=("$@")
	k[(($#))]="-t"
	k[(($#+1))]="${NEWFILES// /,}"
	set -- "${k[@]}"
fi

exec linux32 makepkg "$@"
